@font-face {
    font-family: 'super_sketchregular';
    font-style: normal;
    font-weight: normal;
    src: url('./fonts/supersketch-webfont.woff2') format('woff2'),
         url('./fonts/supersketch-webfont.woff') format('woff');

}
body {
    background-color: #2b0606;
    margin: 0 auto;
    padding: 1rem;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;

}
.bg {
    position:absolute;
    background-image: url(./bg.jpg);
    z-index: -2;
    left:0;
    top:0;
    repeat:repeat;
    object-fit: cover;
    width: 100%;
    height: 100%;
    opacity: 0.2;
}
h1 {
    color:rgb(255, 234, 0);
    font-family: 'super_sketchregular';
    font-size: 0.8rem;    margin: 0;
    padding: 0.7rem;
    text-align: center;
    text-transform: uppercase;
}
.container {
    align-content: center;
    background-color: #810906;
    border: 2px solid #f068656d;
    border-radius: 10px;
    box-shadow: 0 0 6px 4px rgba(0, 0, 0, 0.934);
    box-sizing: border-box;
    display:flex;
    flex-direction: column;
    flex-wrap: wrap;
    padding: 5px 5px 60px 5px;

}
.wrapper {
    align-items: center;
    color:rgb(244, 237, 160);
    display:flex;
    flex-direction: column;
}
.divcenter {
    aspect-ratio: 1/1;
    background-color: white;
    box-shadow: inset 0 0 3px 1px rgba(0, 0, 0, 0.934);
    box-sizing: content-box;
    display: grid;
    height: 280px;
    width: 280px;
}
.flex {

}

.controls {
    background-color: #810806b0;
    box-sizing: content-box;
    display:flex;
    flex-direction: row;
    margin-top: 2rem;
    padding: 0.5rem;
    width: 280px;
    border: 2px solid #f068656d;
    border-radius: 10px;
    box-shadow: 0 0 6px 4px rgba(0, 0, 0, 0.934);
}
h1:hover {
    color:rgb(244, 237, 160);
    cursor: default;
}

label:hover label::after {
    color:green;
    content:' \2713';
}
:checked+label::after {
    color:green;
    content: ' \2713';
}
input:not(:checked)+label::after {
    color:rgba(191, 191, 191, 0.509);
    content: ' \2713';
}
label[for="randomColor"]:hover, label[for="toggleGrid"]:hover, label[for="resetButton"]:hover,label[for="randomColor"]:hover::after, label[for="toggleGrid"]:hover::after, label[for="resetButton"]:hover::after  {
    color: white;
    content: ' \2713';
    cursor:pointer;
}
a {

    display:block;
    color: rgb(244, 237, 160);
    position:absolute;
    bottom:0;
    left:0;
}
input:not(:checked)+label[for="resetButton"]::after {
    content: '';
}

#randomColor, #resetButton, #toggleGrid {
    display:none;
    /* opacity: 0.4; */
}
.leftflex {
    align-items: flex-start;
    display:flex;
    flex: 2;
    flex-flow:column;
    justify-content: space-evenly;
    min-width: 112px;
}

.leftflex > *, .input {
    border-bottom: 1px solid rgb(244, 237, 160);
    display:block;
    height: 2rem;
    line-height: 2rem;
    width: 100%;
}

.rightflex > * {
    display:block;
    height: 2rem;
}
.rightflex {
    align-items: flex-start;
    display:flex;
    flex: 1;
    flex-flow:column;
    justify-content: space-evenly;
}


.grid {
    box-sizing: border-box;
    display:inline-block;
    -webkit-user-select: none;
    -moz-user-select: none;
    -o-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
.grid:hover {
    background-color: rgba(128, 128, 128, 0.146);
}
.togglegrid {
    border: 1px solid rgba(128, 128, 128, 0.094);
}

@media all and (min-width: 424px) {
    .container {
        align-items: center;
        box-sizing: border-box;
        display:flex;
        flex-direction: row-reverse;
        justify-content: center;
    }
    .divcenter {
        height:auto;
        max-width: 600px;
        width: 87vw;
    }
    .controls {
        max-width: 600px;
        width: 87vw;
    }
}
@media all and (min-width: 605px) {
    .controls {
        margin: 0 1.5rem 0 0;
        max-width: 400px;
    }
    .divcenter {
        height:auto;
        max-width: 600px;
        width: 50vw;
    }
    .wrapper {
        align-items: center;
        color:rgb(244, 237, 160);
        display:flex;
        flex-direction: row-reverse;
        justify-content: center;
    }
    .container {
        flex-direction: column;
    }
}